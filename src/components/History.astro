---
import Article from "./Article.astro";
const a = await Astro.glob("/data/ico/history/*");
const images = a.map((file) => file.default);
const txts = await Astro.glob("/data/txt/*");
const history = txts
    .map((oneText) => {
        let correctIcoLink = "";
        const ico = oneText.frontmatter.ico;
        if (ico) {
            correctIcoLink = images.find(
                (oneImg) => oneImg.src.split("/").pop().split(".").shift() === ico.split("/").pop().split(".").shift()
            );
        }
        return { frontmatter: oneText.frontmatter, Content: oneText.Content, ico: correctIcoLink.src };
    })
    .sort((a, b) => {
        const d1 = a.frontmatter.date2 ? new Date(a.frontmatter.date2) : new Date(a.frontmatter.date1);
        const d2 = b.frontmatter.date2 ? new Date(b.frontmatter.date2) : new Date(b.frontmatter.date1);
        if (d1 > d2) {
            return -1;
        }
        if (d1 < d2) {
            return 1;
        }
        return 0;
    });
---

<article id="articles">
    <input id="toggle" type="checkbox" />
    <input id="work" type="checkbox" />
    <div class="center">
        <div class="button-change" class="style-4">
            <label for="toggle" class="label-open">
                <svg class="svgIco" aria-hidden="true" viewBox="0 0 24 24">
                    <path d="M21 11V3h-8l3.29 3.29-10 10L3 13v8h8l-3.29-3.29 10-10z"></path>
                </svg>
            </label>
            <label for="toggle" class="label-close">
                <svg class="svgIco" aria-hidden="true" viewBox="0 0 24 24">
                    <path
                        d="M22 3.41 16.71 8.7 20 12h-8V4l3.29 3.29L20.59 2 22 3.41zM3.41 22l5.29-5.29L12 20v-8H4l3.29 3.29L2 20.59 3.41 22z"
                    >
                    </path>
                </svg>
            </label>
            <label for="work">
                <div class="work-emoji" title="Work">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                    >
                        <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect>
                        <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>
                    </svg>
                </div>
            </label>
        </div>
    </div>
    {history.map((oneData, index) => <Article item={oneData} {index} />)}
</article>

<style>
    #work {
        display: none;
    }
    #toggle {
        display: none;
    }
    .work-emoji {
        padding: 10px;
        border: 1px solid white;
        border-radius: 50px;
    }
    .work-emoji svg {
        display: block;
        cursor: pointer;
    }
    #work:checked ~ .center .work-emoji {
        border: 1px solid black;
    }
    #toggle:checked ~ .center .label-open {
        display: block;
    }
    #toggle:checked ~ .center .label-open {
        display: none;
    }
    #toggle ~ .center .label-close {
        display: none;
    }
    #toggle:checked ~ .center .label-close {
        display: block;
    }
    .label-open {
        cursor: pointer;
    }
    .label-close {
        cursor: pointer;
    }
    .button-change {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .button-change :global(.svgIco) {
        height: 26px;
    }
    .center {
        text-align: center;
        margin-bottom: 10px;
    }
    button {
        font-weight: 600;
        border: solid 2px black;
        outline: 0;
        margin-bottom: 5px;
        font-size: 1.5rem;
        letter-spacing: 0.08rem;
        background-color: white;
        border-radius: 0.35rem;
        position: relative;
        cursor: pointer;
        transition: box-shadow 0.1s;
    }
    button:hover {
        box-shadow: 0px 0px 0px 5px blue;
        border: 1px dashed var(--border-color);
    }
</style>
