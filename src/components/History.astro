---
import Article from "./Article.astro";
import CloseSvg from "./history/CloseSvg.astro";
import ListSvg from "./history/ListSvg.astro";
import OpenSvg from "./history/OpenSvg.astro";
import ProjectsSvg from "./history/ProjectsSvg.astro";
import SchoolHatSvg from "./history/SchoolHatSvg.astro";
import WorkSvg from "./history/WorkSvg.astro";
const a = await Astro.glob("/data/ico/history/*");
const images = a.map((file) => file.default);
const txts = await Astro.glob("/data/txt/*");
const history = txts
    .map((oneText) => {
        let correctIcoLink;
        const ico = oneText.frontmatter.ico;
        if (ico) {
            correctIcoLink = images.find(
                (oneImg) => oneImg.src.split("/").pop().split(".").shift() === ico.split("/").pop().split(".").shift()
            );
        }
        return { frontmatter: oneText.frontmatter, Content: oneText.Content, ico: correctIcoLink?.src || "" };
    })
    .sort((a, b) => {
        const d1a = new Date(a.frontmatter.date1);
        const d1b = new Date(a.frontmatter.date2);
        const d2a = new Date(b.frontmatter.date1);
        const d2b = new Date(b.frontmatter.date2);
        // little checkup
        if (d1a > d1b) {
            throw new Error(`${a.frontmatter.title}: date1 is bigger than date2`);
        }
        if (d2a > d2b) {
            throw new Error(`${b.frontmatter.title}: date1 is bigger than date2`);
        }
        const d1 = a.frontmatter.date2 ? d1b : d1a;
        const d2 = b.frontmatter.date2 ? d2b : d2a;
        if (d1 > d2) {
            return -1;
        }
        if (d1 < d2) {
            return 1;
        }
        return 0;
    });
---

<article id="articles">
    <input id="toggle" type="checkbox" />
    <input id="all" name="selector" type="radio" value="all" checked />
    <input id="work" name="selector" type="radio" value="work" />
    <input id="school" name="selector" type="radio" value="school" />
    <input id="projects" name="selector" type="radio" value="projects" />
    <div class="center">
        <div class="button-change" class="style-4">
            <label for="all">
                <div class="emoji all-emoji" title="All">
                    <ListSvg />
                </div>
            </label>
            <label for="work">
                <div class="emoji work-emoji" title="Work">
                    <WorkSvg />
                </div>
            </label>
            <label for="school">
                <div class="emoji school-emoji" title="School">
                    <SchoolHatSvg />
                </div>
            </label>
            <label for="projects">
                <div class="emoji projects-emoji" title="Projects">
                    <ProjectsSvg />
                </div>
            </label>
            <label for="toggle" class="label-open">
                <div class="emoji" title="Expand details">
                    <OpenSvg />
                </div>
            </label>
            <label for="toggle" class="label-close">
                <div class="emoji" title="Compress details">
                    <CloseSvg />
                </div>
            </label>
        </div>
    </div>
    {history.map((oneData, index) => <Article item={oneData} {index} />)}
</article>

<style>
    input {
        display: none;
    }
    .emoji {
        padding: 11px;
        border-radius: 50px;
    }
    .emoji :global(svg) {
        display: block;
        cursor: pointer;
    }
    #toggle:checked ~ .center .toggle-emoji {
        padding: 10px;
        border: 1px solid black;
    }
    #work:checked ~ .center .work-emoji {
        padding: 10px;
        border: 1px solid black;
    }
    #school:checked ~ .center .school-emoji {
        padding: 10px;
        border: 1px solid black;
    }
    #projects:checked ~ .center .projects-emoji {
        padding: 10px;
        border: 1px solid black;
    }
    #all:checked ~ .center .all-emoji {
        padding: 10px;
        border: 1px solid black;
    }
    #toggle:checked ~ .center .label-open {
        display: block;
    }
    #toggle:checked ~ .center .label-open {
        display: none;
    }
    #toggle ~ .center .label-close {
        display: none;
    }
    #toggle:checked ~ .center .label-close {
        display: block;
    }
    .label-open {
        cursor: pointer;
    }
    .label-close {
        cursor: pointer;
    }
    .button-change {
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .button-change :global(.svgIco) {
        height: 26px;
    }
    .center {
        text-align: center;
        margin-bottom: 10px;
    }
    button {
        font-weight: 600;
        border: solid 2px black;
        outline: 0;
        margin-bottom: 5px;
        font-size: 1.5rem;
        letter-spacing: 0.08rem;
        background-color: white;
        border-radius: 0.35rem;
        position: relative;
        cursor: pointer;
        transition: box-shadow 0.1s;
    }
    button:hover {
        box-shadow: 0px 0px 0px 5px blue;
        border: 1px dashed var(--border-color);
    }
</style>
