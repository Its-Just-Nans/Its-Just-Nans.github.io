---
import type { MarkdownHeading } from "astro";
import "../styles/markdown.css";
import Time from "./Time.astro";
import { getArticleDate, type FrontMatter } from "./utils";
import Toc from "./Toc/Toc.astro";

interface Props {
    frontmatter: FrontMatter;
    slug: string;
    headings: MarkdownHeading[];
}

const { frontmatter, slug, headings } = Astro.props;
const { title, draft, hidden, description, toc } = frontmatter;
const date = getArticleDate(frontmatter);
const realDate = date ? new Date(date) : new Date();
---

<section>
    <div class="section-wrap">
        <div class:list={["headArticle", { animated: hidden }]}>
            <div>
                <a class="backLink" href="..">
                    <span>&lt;-</span>
                </a>
                <h2 class="titleArticle rainbow_text_animated">
                    {title}
                    {hidden && <span class="hidden-span">(hidden)</span>}
                    {draft && <span class="draft-span">(draft)</span>}
                </h2>
            </div>
            <Time date={realDate} className="rainbow_text_animated" />
        </div>
        <div class="headArticleDesc">{description}</div>
        <div class="hr">
            <a
                href={`https://github.com/Its-Just-Nans/Its-Just-Nans/tree/main/website-articles/${slug}`}
                target="_blank"
                class="edit-link">Edit on github</a
            >
        </div>
        <div class:list={["content", { ["content-toc"]: toc }]}>
            <div class="markdown-body">
                <slot />
            </div>
            {toc && <Toc headings={headings} />}
        </div>
    </div>
</section>

<style>
    .backLink {
        color: black;
        display: inline-block;
        padding: 6px;
        background-color: var(--globalColor);
        border-radius: 25%;
        margin-right: 20px;
    }
    .titleArticle {
        display: inline-block;
    }
    section {
        position: fixed;
        bottom: 0px;
        width: 100vw;
        height: calc(100svh - var(--header));
        overflow-y: scroll;
        right: 0px;
        box-sizing: border-box;
        min-height: calc(100svh - var(--header));
    }
    .section-wrap {
        padding-top: 10px;
        padding-left: 10vw;
        padding-right: 10vw;
        padding-bottom: 100px;
    }
    .content {
        position: relative;
    }
    .content-toc {
        display: grid;
        grid-template-columns: 80% 20%;
    }
    .headArticleDesc {
        text-align: center;
        --padding1: 10px;
        --padding2: 10px;
        display: block;
        padding: 0px var(--padding2) var(--padding1) var(--padding2);
    }
    .animated {
        animation: rainbow_animation 6s ease-in-out infinite;
        background: linear-gradient(to right, #6666ff, #0099ff, #00ff00, #ff3399, #6666ff);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        background-size: 400% 100%;
    }
    .draft-span {
        color: red;
        font-size: 20px;
    }
    .headArticle:hover .rainbow_text_animated {
        animation: rainbow_animation 6s ease-in-out infinite;
        background: linear-gradient(to right, #6666ff, #0099ff, #00ff00, #ff3399, #6666ff);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        background-size: 400% 100%;
    }
    .iconSmall {
        height: 32px;
        width: 32px;
        vertical-align: middle;
    }

    @keyframes rainbow_animation {
        0%,
        100% {
            background-position: 0 0;
        }

        50% {
            background-position: 100% 0;
        }
    }
    .edit-link {
        display: block;
        text-align: center;
        padding: 2px;
    }
    .hr {
        --border: 2px;
        border: var(--border) solid var(--globalColor);
        border-radius: 20px;
        margin-bottom: 20px;
        background-color: var(--globalColor);
    }
    .hr * {
        display: none;
    }
    .hr:hover {
        --border: 4px;
    }
    .hr:hover * {
        display: block;
    }
    .headArticle {
        --padding1: 10px;
        --padding2: 20px;
        display: block;
        padding: var(--padding1) var(--padding2) 0px var(--padding2);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    @media only screen and (max-width: 600px) {
        .headArticle {
            --padding2: 0px;
        }
    }
    @media only screen and (max-width: 900px) {
        .content-toc {
            display: block;
        }
    }
    @media only screen and (min-width: 1024px) {
        .section-wrap {
            padding-left: 15vw;
            padding-right: 15vw;
        }
    }
    @media only screen and (min-width: 1600px) {
        .section-wrap {
            padding-left: 27vw;
            padding-right: 27vw;
        }
    }
    @media screen and (max-width: 1024px) {
        .section-wrap {
            padding-top: 5px;
            padding-left: 10px;
            padding-right: 10px;
        }
    }
    @media screen and (min-width: 512px) {
        section::-webkit-scrollbar {
            width: 10px;
        }

        section::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #888;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }
    }
</style>
