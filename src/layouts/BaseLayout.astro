---
import Base from "./Base.astro";
import App from "@components/App.astro";
import { website } from "src/pages";

interface Props {
    title: string;
    addTitle: boolean;
    description?: string;
    keywords: string[];
    defaultKeywords?: string[];
    needKatex?: boolean;
}

const { title, description, addTitle = false, needKatex = false, keywords, defaultKeywords } = Astro.props;
const goodTitle = addTitle ? `${title} - ${website}` : title;
---

<Base title={goodTitle} description={description} keywords={keywords} defaultKeywords={defaultKeywords}>
    <Fragment slot="head-slot">
        {
            needKatex && (
                <link
                    rel="stylesheet"
                    href="https://cdn.jsdelivr.net/npm/katex@0.16.7/dist/katex.min.css"
                    integrity="sha384-3UiQGuEI4TTMaFmGIZumfRPtfKQ3trwQE2JgosJxCnGmQpL/lJdjpcHkaaFwHlcI"
                    crossorigin="anonymous"
                />
            )
        }
    </Fragment>
    <Fragment slot="body-slot">
        <App>
            <slot />
        </App>
        <script>
            const getRandomColor = function () {
                const letters = "9ABCDEF";
                return `#${Array.from({ length: 6 }, () => letters[Math.floor(Math.random() * letters.length)]).join("")}`;
            };
            const colorHeader = () => {
                let color = getRandomColor();
                const currentTime = Date.now();
                try {
                    const storageOldTime = window.localStorage.getItem("colorTime");
                    const oldTime = storageOldTime ? parseInt(storageOldTime) : Infinity;
                    const oldColor = window.localStorage.getItem("color") || color;
                    // 5 minutes
                    const timeout = 5 * 60 * 1000;
                    const isInTime = oldTime && currentTime - oldTime < timeout;
                    if (color && isInTime) {
                        color = oldColor;
                    }
                } catch (e) {
                    console.error(e);
                } finally {
                    window.localStorage.setItem("colorTime", Math.floor(currentTime).toString());
                    window.localStorage.setItem("color", color);
                }
                document.body.setAttribute("style", `--globalColor: ${color}`);
            };
            colorHeader();
        </script>
    </Fragment>
</Base>
